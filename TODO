MAIN PLAN:
build init_db equivalent with http://aaronpowell.github.com/db.js/
port enough code over to create a new league. is it ridiculously slow?
if not, port enough code over to simulate games. is it ridiculously slow?

IF NOT, THEN:
abstract out all references to database into a library, to allow porting to indexeddb painlessly
other feature porting





update: http://www.javasscrypt.com/html5/web-sql-db-vs-indexeddb/
tranasctions: http://blog.nparashuram.com/2011/11/indexeddb-apis-javascriptnext.html        http://stackoverflow.com/questions/10484965/how-can-i-put-several-requests-in-one-transaction-in-indexeddb
joins: http://blog.oharagroup.net/post/16394604653/a-performance-comparison-websql-vs-indexeddb

handlebars templates -f js/templates.js

On page load:
- load main wrapper template and display
- load league internal wrapper but don't display
- if within league and internal league wrapper not displayed, display it
- display content from view (title, content, league_content)
  - do this within the view functions. have a function they call, passing a hash with keys matching blocks, and then have that function update the page

TODO:
only pushstate in ajax_update if this is a new URL (not the current URL)
only need handlebars.runtime.js
merge game_attributes into league table of meta database
