BLOCKERS FOR 0.2.0:
- Feedback from trades (way off, that's close, etc)
- "Synergy" in game simulation
- More realistic stats
- free agents
  - free agents should have a memory. you shouldn't be able to just open the window a bunch of times and see different demands
  - same for trading partners. "Oh, you again?" after failed trade attempts
  - "asking for" column in free agents window
  - AI teams above the cap are still resigning players. fix that.
    -Really, redo AI free agent behavior. Too many good players get left behind because teams can't manage caps
- released player contracts should count against your cap
  - bought out players shouldn't, but they should cost cash
- Point balance
  - PPG is too skewed
  - APG not skewed enough
- If it's actually fun, make a .deb and distribute
- rename stuff back to basketball-gm ..?

All the other UI prettifying and code refactoring stuff can wait.

---

Separate files
- Each window/dialog gets its own glade file and own .py file in views folder
- initial build in each constructor DELETE THIS CRAP

Prettier UI: embed Webkit
- http://www.aclevername.com/articles/python-webgui/
- first try for box score
  - how to make HTML links do external stuff
  - total rebounds
  - starters/bench distinction {% if forloop.counter == 5 %} separator{% endif %}
- then for standings
- then status/summary toolbar/sidebar
  - team
  - record
  - standings
  - finances: annual profit/loss, total cash/debt
  - history: total record, playoffs, championships, all star appearances, hall of fame selections
- Use theme settings for fonts and colors
  - https://wiki.ubuntu.com/Quickly/Snippets "Get Gtk+ theme colors"

numpy rand
- make this optional

Player window and game log list should be sped up by not checking the old (static) rows

when negotiating, players change values too much when you try to change years
when you press close and the save/nosave/cancel dialog comes up, it should warn you about the save if you press save

factor out game logic from views
- lib or core or something folder

======
FUTURE
======

GAMESIM
-------
overtime
take all ratings into account
blocks, assists (maybe other things) should not be so evenly distributed
home and away games

UI
--
view any team in the roster window
    drop down box at the top with team names
    all actions disabled unless team_id == common.PLAYER_TEAM_ID
    open this window when a team is double-clicked on in the standings
customize which columns are displayed in treeviews - kiwi
treeview formatting
    str, int, float, currency, date, age - do formatting based on column type
progress bars
filtering should be done with treemodelfilter - see pygtk tutorial
play menu
    even after hiding, accelerators still work, so on menuitem activation, check to make sure it's a valid choice!!!
        or: set accelerators in python code, not glade.  then i can reuse accelerators
on new/open game:
    close all open dialogs/windows
    refresh all tabs of the main window
ratings log tab on player window

NBA
---
real salary cap rules: http://en.wikipedia.org/wiki/NBA_Salary_Cap
    released players should count against cap
real contract rules (max/min, etc.)
allow contracts that aren't the same $ every year
team and player options
releasing players - see the salary cap wiki page for complicated rule
luxury tax: (team_salary - 65mil) penalty if team salary is > 65mil

BACKEND
-------
archive stats as averages - this will make the end of season awards feasible, and make the stats view faster/easier
uncertainty in rating - for each player, calculate a randn(0, 3) with max/min of +/- 5
    calculate a new one each year and add it to 1/2 of the previous one
teams should be smart in resigning players (now it's just random)
use constants for phase #'s, other things.  maybe create a dict CONST in common.py?

AI (NON-GAMESIM)
----------------
opponent GM trade AI based on their team's status: contending or rebuilding

FEATURES
--------
injuries
opponent GM trade AI based on their team's status: contending or rebuilding
change prices of tickets, concessions, etc
hire coaches to influence development
different sized cities with differently passionate fanbases - affects attendance and home court advantage
multi-team trades... how can i make a good UI for that?
advanced stats (+/-, PER, etc)
punishment for going in debt: if cash is less than $10M, can't sign any new contracts
advisors
