main todo (before public beta)
------------------------------

hitting the phase twice shouldn't be possible. but if i, for instance, hit "until preseason" twice quickly, i skip a year
  maybe have something like lock.phaseChangeInProgress? but some timeout would be needed to reset
  quick fix: disable play menu on click, reenable on new phase?
revamp lock?
  make it all async, like
  lock.canStartGames(function (canStartGames) {
      if (canStartGames) {
          // whatever
      }
  });
  actually implement these functions rather than using placeholders. check the db, not g
free agents
  let free agents stay for 2 seasons before retiring, or make retirement probabilistic
    is retirement working for the first season, at all?
  on new game, have enough free agents so the pool isn't totally depleted
game simulation realism
  make pages that show stats and ratings as medians/quintiles, for a given season. this will help see how they evolve over time, respond to tweaking, etc.
    make the debug menu only show within a league, and allow it to dynamically know the lid
    come up with a way of plotting horizontal box plots easily
      scale is based on some predefined reasonable range
      get rid of absolute positioning requirement?
      show the min and max of the scale, in a smaller/less dark font
    separate pages for player stats, player ratings, and team stats
    also show the number of players, to make sure nothing funny is going on
    for stats, add NBA data for comparison
  separate composite ratings for shooting in different places (jumpshot, inside, fast break, three, etc)
    how do i know how many of each are shot? log it in some kind of game summary log
    better shots (dunks/layups) should occur when created by other factors (defense, passing, etc)
  height should matter a lot more
    e.g.
      bigs should get more boards
      bigs should have higher FG%, even with less shots
        bad shooters should get more shots than they do now, e.g. noah
      smalls should have lower FG%, even with more shots
    if i make some fundamental change, i need to account for it in randomly generated players
  pgs should get more assists - increase prob for the "PG" (best ball handler and passer) on the floor
  smalls should get less blocks
  compare team and player stat distributions against reality
  home/away advantage
import/export games
put on play.basketball-gm.com, with splash page on basketball-gm.com
bootstrap 2.2?
free agent balance.. maybe increase salary cap?
git tag as beta

---

BUGS

league database error when playoffs end
  is it only the first year, and is it due to retiring players?
game simulation stops when a link is clicked, but then restarts when another link is clicked? wtf
  This seems to generally work now, but it's not perfect. If you do any action that writes to the database, such as reordering the roster, something bad could happen because IndexedDB doesn't like multiple writes going on at the same time
sometimes deleting leagues or resetting db fails, i think because some open connection is blocking it, but i don't know why
db error when switching to resign players phase?
when full UI is open in two tabs, a "stop" command from one tab doesn't do anything to the other tab?
In firefox, I can add this to the new league form:
   onclick="this.disabled=true; this.innerHTML='Generating league...';"
  in chrome, it doesn't work. http://productforums.google.com/forum/#!topic/chrome/M7y2gZDvXAk says to change it to
   onclick="this.disabled=true; this.innerHTML='Generating league...'; this.form.submit();"
  but that doesn't seem to play nice with davis.js
    https://github.com/olivernn/davis.js/issues/63
  full page reload should still work if i set up webpy to allow POST
trading is glitchy in chrome
error during draft? - this might be fixed due to the double cb bugfix

---

FUTURE FEATURES (i.e. not required for public beta, probably.. but go through the list again to check)

jslint --plusplus --predef $ --predef Davis --predef requirejs --predef define --predef window --predef document --predef localStorage --predef IDBKeyRange --predef IDBTransaction --predef g --predef c js/core/draft.js
  http://stackoverflow.com/questions/7425147/jslint-error-somefunction-was-used-before-it-was-defined
  http://stackoverflow.com/questions/6744692/jslint-should-we-tolerate-misordered-definitions
    http://javascript.crockford.com/code.html
  http://stackoverflow.com/questions/806163/jslint-using-a-function-before-its-defined-error
contract negotiation
  test all the error conditions and make sure callbacks are appropriately called (unit tests?)
  add free agent to the end of roster
player stats
  how to handle aggregating stats for players who played for more than one team in a season? add them all up in ps in db.getPlayers
player view
  contract for free agents should note that it is requested, not existing. also, make sure the penalty for repeated negotiations is accounted for, as in the free agents view
  no contract or ratings shown for retired player
db.getPlayers
  rename to helpers.filterPlayers?
  use for other access of players "playersAll"
  the special case attributes should generally be moved directly into the database.
draftTeamName and draftTeamRegion needed for anything? If not, cut them.
Replace showNoStats with a check of stats.length in db.getPlayer, at least in some cases? API is messy
roster size check on new season
  cpu teams with < 5 players should automatically sign free agents
history view retired players
  why is abbrev ATL? should be FA if they were free agents last, otherwise it should be their last team
    do i need a handlebars helper so that FA isn't linked anywhere when used as an abbrev?
retired players
  test
trade refactoring
  validateSavedTids crap should be in trade.js.
  trade.summary stuff should be automatic and stored in tradeStore
DataTables - need to rethink a lot of this, particularly how to make a decent UI
  http://datatables.net/extras/ such as scroller, colreorder, colvis, ...
  add team dropdown to ratings and stats views - but should this refresh the view, or just filter the DataTable?
    could use something like http://www.datatables.net/extras/thirdparty/ColumnFilterWidgets/DataTables/extras/ColumnFilterWidgets/ to also filter on positions
  per 36 stats in team/player stats view
    add a dropdown (maybe make the dropdown handling code more general?)
    add an option to db.getPlayers
  default to sort descending when column is clicked
    http://datatables.net/ref#asSorting will work. maybe pass it as an option to bbgm_datatable
player.addStatsRow
  season parameter wouldn't be needed if g.season was already set. Set g.season early, then.
league leaders
  minimum minutes played to show?
commas for thousands
  number of games played in delete league view
  attendance in finances
  attendance in league dashboard
transaction log (free agent signings, etc)
money display
  -$, not $-. Might need a new handlebars function to do this
  conditional formatting to show negative dollars in red
    https://www.google.com/search?q=site%3Adatatables.net+conditional+formatting&ie=utf-8&oe=utf-8&client=ubuntu&channel=fs
    finances
    league dashboard
internationalization
  league dashboard rankings should say 1st, 2nd, 3rd rather than 1th, 2th, 3th
league dashboard
  next game should show something when active in playoffs, a message at least
add activeYears multientry like statsTids use for:
  league leaders
  stats
  ratings
playoff stats in player view
  need a way to request only playoff stats from db.getPlayers - see all the playoffs === false stuff
cache payroll each year?
  cache at the end of the playoffs
  update cached value for this year whenever it changes
    player is signed
    trade happens
    player is bought out
    player is released
  would simplify db.getTeams
  would allow historical finances view
  but is it worth it? would the cached values be meaningful?
don't block the UI in game simulation
  slide 81 http://www.slideshare.net/nzakas/high-performance-javascript-capitoljs-2011
    http://www.kryogenix.org/days/2009/07/03/not-blocking-the-ui-in-tight-javascript-loops
in lock functions, update g from database before using any potentially sensitive values
  or should these g.whatever variables be set at all if they're sensitive? lid doesn't change obviously, but the others?
move to new window button, like gmail, that will open a view in a new window with a minimal UI
  only the icon should be clickable, not the area above and below
  insert query string before # in URL when making popup in ui.moveToNewWindow. also, account for any other query string already there (although there currently aren't any others, AFAIK)
team history view needs more love
auto-add players when AI teams are below limit (in season.js)
AI modules that contain functions which are called to determine if players are resigned, etc.
notifications (and log) from top right to display log of key events
  game results from user's team
  players retiring from user's team
  league champions
show an option to upload a data file for rosters
  nba roster
    define file format for external player sources
    derive from stats, somehow?
    nba player potential ratings
    if necessary, scale everything down a bit to make it comparable to normal players
    free agents are way overrated. is this roster file legit?
should all this stuff be always in g, or read dynamically from the database?
player finder
  search by stats or ratings
  trade for button, or sign button if free agent
free agent error message "You cannot initiate a new negotiaion while game simulation is in progress or a previous contract negotiation is in process." is only displayed transiently before the free agent list is reloaded?
online "locker" that you can sync saved games to

---

handlebars templates -f js/templates.js

TODO:
only need handlebars.runtime.js

---

g.dbl.transaction("players").objectStore("players").get(476).onsuccess = function (event) { console.log(event.target.result); };

g.dbl.transaction("gameAttributes").objectStore("gameAttributes").getAll().onsuccess = function (event) { console.dir(event.target.result); };

---

FUTURE:

Web workers
  An implementation is in the webworkers branch. It kind of works, but it doesn't seem to play nice with IDB transactions, so I have to open a new transaction when the callback fires, so it is problematic to have multiple workers in parallel all trying to open readwrite transactions.
more sophisticatedrealtime data binding/updating
  ember.js
    data binding
    uses handlebars
  knockoutjs is too flaky. try just a naive approach first, and use something better later
  be smarter about things that don't change, like old box scores, stats from old seasons, etc
  handle deeper content, like pagination/sorting in tables and tabs in player view








# Pre-JavaScript TODO

player view
  next, previous buttons (also active on left/right arrows)
  link to team roster if player is on a team
  for retired players, either don't show ratings, or show ratings from best year

roster
  highlight handle on hover, like button
  "trade for" only sensitive when trades are allowed

Client-side game simulation
  Robustness of javascript code
    g.phase == 3 in league_views might introduce race condition
    validate data from client?
    make sure play menu doesn't ever get stuck - some kind of timeout

play button requirements
  colors - is this a good idea?
    green: move to new phase
    blue: play games
    red: other immediate action

make validate_season work correctly

include sidebar(s) showing all relevant information, plus make that stuff generated by a separate function so it can eventually be kept static as JS updates other content

grep for # links: grep -R --include="*.html" '<a href="#">' .

security
  csrf protection
    http://flask.pocoo.org/docs/security/#cross-site-request-forgery-csrf
    http://packages.python.org/Flask-SeaSurf/
    http://flask.pocoo.org/snippets/3/
    even for ajax https://docs.djangoproject.com/en/1.2/releases/1.2.5/#csrf-exception-for-ajax-requests

playoffs
  on playoffs start, automatically switch to playoffs view
  link to team rosters... or better to link to a summary of the series?

# Then

trades
  allow trades that go over roster limit, but require players to be cut or traded to meet limit before game simulation continues

self-contained game simulation code, to allow other people to hack on it easily. automatically make charts and stuff.

warning when window is closed and game simulation is in progress
  http://stackoverflow.com/questions/1244535/alert-when-browser-window-closed-accidentally
  https://developer.mozilla.org/en/DOM/window.onbeforeunload

abstract opposing team AI: make it a class with various methods to determine actions at different time points

game log
  pushstate for individual box scores as well as teams and seasons, somehow?

# BELOW IS OLD STUFF

Minor bugs:

Lottery should be for the 14 teams not in the playoffs, which isn't necessarily the same as the 14 worst teams.
Don't allow sort from first column of trade window

---

when negotiating, players change values too much when you try to change years

======
FUTURE
======

GAMESIM
-------
take all ratings into account
  energy, etc
blocks, assists (maybe other things) should not be so evenly distributed
home and away games
synergy
  Gameplay bonuses when any of the following are true...
    At least one player with dribbling > X
    At least two players with shooting_three_pointers > X
    At least three players with shooting_three_pointers > X
    At least four players with shooting_three_pointers > X
    At least one player with rebounding > X
    At least one player with blocks > X
    At least three players with steals > X
    At least one player with inside_scoring > X
    At least three players with speed > X and (shooting_layups > X or shooting_layups + jumping > X)

UI
--
some indication of synergy
in team stats tab, allow toggle to show opponent stats

NBA
---
real salary cap rules: http://en.wikipedia.org/wiki/NBA_Salary_Cap
real contract rules (max/min, etc.)
allow contracts that aren't the same $ every year
team and player options
releasing players - see the salary cap wiki page for complicated rule
luxury tax: (team_salary - 65mil) penalty if team salary is > 65mil
trading deadline

BACKEND
-------
archive stats as averages - this will make the end of season awards feasible, and make the stats view faster/easier
uncertainty in rating - for each player, calculate a randn(0, 3) with max/min of +/- 5
    calculate a new one each year and add it to 1/2 of the previous one
teams should be smart in resigning players (now it's just random)
use constants for phase #'s, other things.  maybe create a dict CONST in common.py?
    confirm that teams always have at least 5 players

AI (NON-GAMESIM)
----------------
trade
  mechanism similar to free_agent_times_asked to prevent prolonged negotiations
  AI teams trade with each other
  opponent GM trade AI based on their team's status: contending or rebuilding
  record player value for contending and rebuilding teams in player_attributes, so opposing GMs can more easily suggest trades (i.e. "i'll make the deal if you throw in X")
  Feedback from trades (way off, that's close, etc)
  "Oh, you again?" after failed trade attempts
  AI teams should be aware of contract lengths and the implications thereof
AI teams release/buy out players to sign a better free agent

FEATURES
--------
injuries
opponent GM trade AI based on their team's status: contending or rebuilding
change prices of tickets, concessions, etc
hire coaches to influence development
different sized cities with differently passionate fanbases - affects attendance and home court advantage
multi-team trades... how can i make a good UI for that?
advanced stats (+/-, PER, etc)
punishment for going in debt: if cash is less than $10M, can't sign any new contracts
advisors
trades
  draft picks
  cash
  drop players as part of trade, to free up roster space
